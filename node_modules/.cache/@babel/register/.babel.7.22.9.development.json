{"{\"assumptions\":{},\"sourceRoot\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group\",\"filename\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.9:development":{"value":{"code":"/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require('./wpgulp.config.js');\n\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\nconst gulp = require('gulp'); // Gulp of-course.\n\n// CSS related plugins.\nconst sass = require('gulp-sass'); // Gulp plugin for Sass compilation.\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n\n// JS related plugins.\nconst concat = require('gulp-concat'); // Concatenates JS files.\nconst uglify = require('gulp-uglify'); // Minifies JS files.\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n\n// Image related plugins.\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n\n// Utility related plugins.\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\nconst notify = require('gulp-notify'); // Sends message notification to you.\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\nconst beep = require('beepbeep');\nconst zip = require('gulp-zip'); // Zip plugin or theme file.\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\nconst errorHandler = r => {\n  notify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n  beep();\n\n  // this.emit('end');\n};\n\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\nconst browsersync = done => {\n  browserSync.init({\n    proxy: config.projectURL,\n    open: config.browserAutoOpen,\n    injectChanges: config.injectChanges,\n    watchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir']\n  });\n  done();\n};\n\n// Helper function to allow browser reload with Gulp 4.\nconst reload = done => {\n  browserSync.reload();\n  done();\n};\n\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('styles', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(sourcemaps.write('./')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n  .pipe(notify({\n    message: '\\n\\n✅  ===> STYLES — completed!\\n',\n    onLast: true\n  }));\n});\n\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('stylesRTL', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(rename({\n    suffix: '-rtl'\n  })) // Append \"-rtl\" to the filename.\n  .pipe(rtlcss()) // Convert to RTL.\n  .pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(notify({\n    message: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n    onLast: true\n  }));\n});\n\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\ngulp.task('vendorsJS', () => {\n  return gulp.src(config.jsVendorSRC, {\n    since: gulp.lastRun('vendorsJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env',\n    // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n    }]]\n  })).pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsVendorFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(rename({\n    basename: config.jsVendorFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(notify({\n    message: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n    onLast: true\n  }));\n});\n\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\ngulp.task('customJS', () => {\n  return gulp.src(config.jsCustomSRC, {\n    since: gulp.lastRun('customJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env',\n    // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n    }]]\n  })).pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsCustomFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(rename({\n    basename: config.jsCustomFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(notify({\n    message: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n    onLast: true\n  }));\n});\n\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\ngulp.task('images', () => {\n  return gulp.src(config.imgSRC).pipe(cache(imagemin([imagemin.gifsicle({\n    interlaced: true\n  }), imagemin.mozjpeg({\n    quality: 90,\n    progressive: true\n  }), imagemin.optipng({\n    optimizationLevel: 3\n  }),\n  // 0-7 low-high.\n  imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]))).pipe(gulp.dest(config.imgDST)).pipe(notify({\n    message: '\\n\\n✅  ===> IMAGES — completed!\\n',\n    onLast: true\n  }));\n});\n\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\ngulp.task('clearCache', function (done) {\n  return cache.clearAll(done);\n});\n\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\ngulp.task('translate', () => {\n  return gulp.src(config.watchPhp).pipe(sort()).pipe(wpPot({\n    domain: config.textDomain,\n    package: config.packageName,\n    bugReport: config.bugReport,\n    lastTranslator: config.lastTranslator,\n    team: config.team\n  })).pipe(gulp.dest(config.translationDestination + '/' + config.translationFile)).pipe(notify({\n    message: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n    onLast: true\n  }));\n});\n\n/**\n * Zips theme or plugin and places in the parent directory\n *\n * zipIncludeGlob: Files to be included in the zip file\n * zipIgnoreGlob: Files to be ignored from the zip file\n * zipDestination: Must be a folder outside of the zip folder.\n * zipName: theme.zip or plugin.zip\n */\ngulp.task('zip', () => {\n  const src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n  return gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\n});\n\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\ngulp.task('default', gulp.parallel('styles', 'vendorsJS', 'customJS', 'images', browsersync, () => {\n  gulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n  gulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n  gulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n  gulp.watch(config.watchJsCustom, gulp.series('customJS', reload)); // Reload on customJS file changes.\n  gulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["config","require","gulp","sass","minifycss","autoprefixer","mmq","rtlcss","concat","uglify","babel","imagemin","rename","lineec","filter","sourcemaps","notify","browserSync","create","wpPot","sort","cache","remember","plumber","beep","zip","errorHandler","r","onError","browsersync","done","init","proxy","projectURL","open","browserAutoOpen","injectChanges","watchEvents","reload","task","src","styleSRC","allowEmpty","pipe","errLogToConsole","outputStyle","precision","on","logError","write","includeContent","loadMaps","BROWSERS_LIST","dest","styleDestination","log","stream","suffix","maxLineLen","message","onLast","jsVendorSRC","since","lastRun","presets","targets","browsers","jsVendorFile","jsVendorDestination","basename","jsCustomSRC","jsCustomFile","jsCustomDestination","imgSRC","gifsicle","interlaced","mozjpeg","quality","progressive","optipng","optimizationLevel","svgo","plugins","removeViewBox","cleanupIDs","imgDST","clearAll","watchPhp","domain","textDomain","package","packageName","bugReport","lastTranslator","team","translationDestination","translationFile","zipIncludeGlob","zipIgnoreGlob","zipName","zipDestination","parallel","watch","watchStyles","watchJsVendor","series","watchJsCustom"],"sourceRoot":"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group/","sources":["gulpfile.babel.js"],"sourcesContent":["/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require('./wpgulp.config.js');\n\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\nconst gulp = require('gulp'); // Gulp of-course.\n\n// CSS related plugins.\nconst sass = require('gulp-sass'); // Gulp plugin for Sass compilation.\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n\n// JS related plugins.\nconst concat = require('gulp-concat'); // Concatenates JS files.\nconst uglify = require('gulp-uglify'); // Minifies JS files.\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n\n// Image related plugins.\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n\n// Utility related plugins.\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\nconst notify = require('gulp-notify'); // Sends message notification to you.\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\nconst beep = require('beepbeep');\nconst zip = require('gulp-zip'); // Zip plugin or theme file.\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\nconst errorHandler = r => {\n\tnotify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n\tbeep();\n\n\t// this.emit('end');\n};\n\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\nconst browsersync = done => {\n\tbrowserSync.init({\n\t\tproxy: config.projectURL,\n\t\topen: config.browserAutoOpen,\n\t\tinjectChanges: config.injectChanges,\n\t\twatchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir']\n\t});\n\tdone();\n};\n\n// Helper function to allow browser reload with Gulp 4.\nconst reload = done => {\n\tbrowserSync.reload();\n\tdone();\n};\n\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('styles', () => {\n\treturn gulp\n\t\t.src(config.styleSRC, {allowEmpty: true})\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(\n\t\t\tsass({\n\t\t\t\terrLogToConsole: config.errLogToConsole,\n\t\t\t\toutputStyle: config.outputStyle,\n\t\t\t\tprecision: config.precision\n\t\t\t})\n\t\t)\n\t\t.on('error', sass.logError)\n\t\t.pipe(sourcemaps.write({includeContent: false}))\n\t\t.pipe(sourcemaps.init({loadMaps: true}))\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\n\t\t.pipe(sourcemaps.write('./'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(mmq({log: true})) // Merge Media Queries only for .min.css version.\n\t\t.pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n\t\t.pipe(rename({suffix: '.min'}))\n\t\t.pipe(minifycss({maxLineLen: 10}))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> STYLES — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('stylesRTL', () => {\n\treturn gulp\n\t\t.src(config.styleSRC, {allowEmpty: true})\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(\n\t\t\tsass({\n\t\t\t\terrLogToConsole: config.errLogToConsole,\n\t\t\t\toutputStyle: config.outputStyle,\n\t\t\t\tprecision: config.precision\n\t\t\t})\n\t\t)\n\t\t.on('error', sass.logError)\n\t\t.pipe(sourcemaps.write({includeContent: false}))\n\t\t.pipe(sourcemaps.init({loadMaps: true}))\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(rename({suffix: '-rtl'})) // Append \"-rtl\" to the filename.\n\t\t.pipe(rtlcss()) // Convert to RTL.\n\t\t.pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n\t\t.pipe(mmq({log: true})) // Merge Media Queries only for .min.css version.\n\t\t.pipe(rename({suffix: '.min'}))\n\t\t.pipe(minifycss({maxLineLen: 10}))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\ngulp.task('vendorsJS', () => {\n\treturn gulp\n\t\t.src(config.jsVendorSRC, {since: gulp.lastRun('vendorsJS')}) // Only run on changed files.\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(\n\t\t\tbabel({\n\t\t\t\tpresets: [\n\t\t\t\t\t[\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttargets: {browsers: config.BROWSERS_LIST} // Target browser list to support.\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\t\t.pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n\t\t.pipe(concat(config.jsVendorFile + '.js'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\n\t\t.pipe(\n\t\t\trename({\n\t\t\t\tbasename: config.jsVendorFile,\n\t\t\t\tsuffix: '.min'\n\t\t\t})\n\t\t)\n\t\t.pipe(uglify())\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\ngulp.task('customJS', () => {\n\treturn gulp\n\t\t.src(config.jsCustomSRC, {since: gulp.lastRun('customJS')}) // Only run on changed files.\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(\n\t\t\tbabel({\n\t\t\t\tpresets: [\n\t\t\t\t\t[\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttargets: {browsers: config.BROWSERS_LIST} // Target browser list to support.\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\t\t.pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n\t\t.pipe(concat(config.jsCustomFile + '.js'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\n\t\t.pipe(\n\t\t\trename({\n\t\t\t\tbasename: config.jsCustomFile,\n\t\t\t\tsuffix: '.min'\n\t\t\t})\n\t\t)\n\t\t.pipe(uglify())\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\ngulp.task('images', () => {\n\treturn gulp\n\t\t.src(config.imgSRC)\n\t\t.pipe(\n\t\t\tcache(\n\t\t\t\timagemin([\n\t\t\t\t\timagemin.gifsicle({interlaced: true}),\n\t\t\t\t\timagemin.mozjpeg({quality: 90, progressive: true}),\n\t\t\t\t\timagemin.optipng({optimizationLevel: 3}), // 0-7 low-high.\n\t\t\t\t\timagemin.svgo({\n\t\t\t\t\t\tplugins: [{removeViewBox: true}, {cleanupIDs: false}]\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t)\n\t\t)\n\t\t.pipe(gulp.dest(config.imgDST))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> IMAGES — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\ngulp.task('clearCache', function (done) {\n\treturn cache.clearAll(done);\n});\n\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\ngulp.task('translate', () => {\n\treturn gulp\n\t\t.src(config.watchPhp)\n\t\t.pipe(sort())\n\t\t.pipe(\n\t\t\twpPot({\n\t\t\t\tdomain: config.textDomain,\n\t\t\t\tpackage: config.packageName,\n\t\t\t\tbugReport: config.bugReport,\n\t\t\t\tlastTranslator: config.lastTranslator,\n\t\t\t\tteam: config.team\n\t\t\t})\n\t\t)\n\t\t.pipe(gulp.dest(config.translationDestination + '/' + config.translationFile))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Zips theme or plugin and places in the parent directory\n *\n * zipIncludeGlob: Files to be included in the zip file\n * zipIgnoreGlob: Files to be ignored from the zip file\n * zipDestination: Must be a folder outside of the zip folder.\n * zipName: theme.zip or plugin.zip\n */\ngulp.task('zip', () => {\n\tconst src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n\treturn gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\n});\n\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\ngulp.task(\n\t'default',\n\tgulp.parallel('styles', 'vendorsJS', 'customJS', 'images', browsersync, () => {\n\t\tgulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n\t\tgulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n\t\tgulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n\t\tgulp.watch(config.watchJsCustom, gulp.series('customJS', reload)); // Reload on customJS file changes.\n\t\tgulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n\t})\n);\n"],"mappings":"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"}},"mtime":1689231001167},"{\"assumptions\":{},\"sourceRoot\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group\",\"filename\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group/wpgulp.config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.9:development":{"value":{"code":"/**\n * WPGulp Configuration File\n *\n * 1. Edit the variables as per your project requirements.\n * 2. In paths you can add <<glob or array of globs>>.\n *\n * @package WPGulp\n */\n\n// Project options.\n\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = \"localhost:10023\";\n\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\nconst productURL = \"./\";\nconst browserAutoOpen = false;\nconst injectChanges = true;\n\n// >>>>> Style options.\n// Path to main .scss file.\nconst styleSRC = \"./assets/scss/main.scss\";\n\n// Path to place the compiled CSS file. Default set to root folder.\nconst styleDestination = \"./assets/css/\";\n\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\nconst outputStyle = \"compact\";\nconst errLogToConsole = true;\nconst precision = 10;\n\n// JS Vendor options.\n\n// Path to JS vendor folder.\nconst jsVendorSRC = \"./assets/js/vendor/*.js\";\n\n// Path to place the compiled JS vendors file.\nconst jsVendorDestination = \"./assets/js/\";\n\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\nconst jsVendorFile = \"vendor\";\n\n// JS Custom options.\n\n// Path to JS custom scripts folder.\nconst jsCustomSRC = \"./assets/js/custom/*.js\";\n\n// Path to place the compiled JS custom scripts file.\nconst jsCustomDestination = \"./assets/js/\";\n\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\nconst jsCustomFile = \"custom\";\n\n// Images options.\n\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\nconst imgSRC = \"./assets/img/raw/**/*\";\n\n// Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\nconst imgDST = \"./assets/img/\";\n\n// >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\nconst watchStyles = \"./assets/scss/**/*.scss\";\n\n// Path to all vendor JS files.\nconst watchJsVendor = \"./assets/js/vendor/*.js\";\n\n// Path to all custom JS files.\nconst watchJsCustom = \"./assets/js/custom/*.js\";\n\n// Path to all PHP files.\nconst watchPhp = \"./**/*.php\";\n\n// >>>>> Zip file config.\n// Must have.zip at the end.\nconst zipName = \"prime.zip\";\n\n// Must be a folder outside of the zip folder.\nconst zipDestination = \"./../\"; // Default: Parent folder.\nconst zipIncludeGlob = [\"./**/*\"]; // Default: Include all files/folders in current directory.\n\n// Default ignored files and folders for the zip file.\nconst zipIgnoreGlob = [\"!./{node_modules,node_modules/**/*}\", \"!./.git\", \"!./.svn\", \"!./gulpfile.babel.js\", \"!./wpgulp.config.js\", \"!./.eslintrc.js\", \"!./.eslintignore\", \"!./.editorconfig\", \"!./phpcs.xml.dist\", \"!./vscode\", \"!./package.json\", \"!./package-lock.json\", \"!./assets/scss/**/*\", \"!./assets/scss\", \"!./assets/img/raw/**/*\", \"!./assets/img/raw\", `!${imgSRC}`, `!${styleSRC}`, `!${jsCustomSRC}`, `!${jsVendorSRC}`];\n\n// >>>>> Translation options.\n// Your text domain here.\nconst textDomain = \"prime\";\n\n// Name of the translation file.\nconst translationFile = \"prime.pot\";\n\n// Where to save the translation files.\nconst translationDestination = \"./languages\";\n\n// Package name.\nconst packageName = \"prime\";\n\n// Where can users report bugs.\nconst bugReport = \"\";\n\n// Last translator Email ID.\nconst lastTranslator = \"\";\n\n// Team's Email ID.\nconst team = \"\";\n\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\nconst BROWSERS_LIST = [\"last 2 version\", \"> 1%\"];\n\n// Export.\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["projectURL","productURL","browserAutoOpen","injectChanges","styleSRC","styleDestination","outputStyle","errLogToConsole","precision","jsVendorSRC","jsVendorDestination","jsVendorFile","jsCustomSRC","jsCustomDestination","jsCustomFile","imgSRC","imgDST","watchStyles","watchJsVendor","watchJsCustom","watchPhp","zipName","zipDestination","zipIncludeGlob","zipIgnoreGlob","textDomain","translationFile","translationDestination","packageName","bugReport","lastTranslator","team","BROWSERS_LIST","module","exports"],"sourceRoot":"/home/roman/Local Sites/prime-air-group/app/public/wp-content/themes/prime-air-group/","sources":["wpgulp.config.js"],"sourcesContent":["/**\n * WPGulp Configuration File\n *\n * 1. Edit the variables as per your project requirements.\n * 2. In paths you can add <<glob or array of globs>>.\n *\n * @package WPGulp\n */\n\n// Project options.\n\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = \"localhost:10023\";\n\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\nconst productURL = \"./\";\nconst browserAutoOpen = false;\nconst injectChanges = true;\n\n// >>>>> Style options.\n// Path to main .scss file.\nconst styleSRC = \"./assets/scss/main.scss\";\n\n// Path to place the compiled CSS file. Default set to root folder.\nconst styleDestination = \"./assets/css/\";\n\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\nconst outputStyle = \"compact\";\nconst errLogToConsole = true;\nconst precision = 10;\n\n// JS Vendor options.\n\n// Path to JS vendor folder.\nconst jsVendorSRC = \"./assets/js/vendor/*.js\";\n\n// Path to place the compiled JS vendors file.\nconst jsVendorDestination = \"./assets/js/\";\n\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\nconst jsVendorFile = \"vendor\";\n\n// JS Custom options.\n\n// Path to JS custom scripts folder.\nconst jsCustomSRC = \"./assets/js/custom/*.js\";\n\n// Path to place the compiled JS custom scripts file.\nconst jsCustomDestination = \"./assets/js/\";\n\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\nconst jsCustomFile = \"custom\";\n\n// Images options.\n\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\nconst imgSRC = \"./assets/img/raw/**/*\";\n\n// Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\nconst imgDST = \"./assets/img/\";\n\n// >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\nconst watchStyles = \"./assets/scss/**/*.scss\";\n\n// Path to all vendor JS files.\nconst watchJsVendor = \"./assets/js/vendor/*.js\";\n\n// Path to all custom JS files.\nconst watchJsCustom = \"./assets/js/custom/*.js\";\n\n// Path to all PHP files.\nconst watchPhp = \"./**/*.php\";\n\n// >>>>> Zip file config.\n// Must have.zip at the end.\nconst zipName = \"prime.zip\";\n\n// Must be a folder outside of the zip folder.\nconst zipDestination = \"./../\"; // Default: Parent folder.\nconst zipIncludeGlob = [\"./**/*\"]; // Default: Include all files/folders in current directory.\n\n// Default ignored files and folders for the zip file.\nconst zipIgnoreGlob = [\n  \"!./{node_modules,node_modules/**/*}\",\n  \"!./.git\",\n  \"!./.svn\",\n  \"!./gulpfile.babel.js\",\n  \"!./wpgulp.config.js\",\n  \"!./.eslintrc.js\",\n  \"!./.eslintignore\",\n  \"!./.editorconfig\",\n  \"!./phpcs.xml.dist\",\n  \"!./vscode\",\n  \"!./package.json\",\n  \"!./package-lock.json\",\n  \"!./assets/scss/**/*\",\n  \"!./assets/scss\",\n  \"!./assets/img/raw/**/*\",\n  \"!./assets/img/raw\",\n  `!${imgSRC}`,\n  `!${styleSRC}`,\n  `!${jsCustomSRC}`,\n  `!${jsVendorSRC}`,\n];\n\n// >>>>> Translation options.\n// Your text domain here.\nconst textDomain = \"prime\";\n\n// Name of the translation file.\nconst translationFile = \"prime.pot\";\n\n// Where to save the translation files.\nconst translationDestination = \"./languages\";\n\n// Package name.\nconst packageName = \"prime\";\n\n// Where can users report bugs.\nconst bugReport = \"\";\n\n// Last translator Email ID.\nconst lastTranslator = \"\";\n\n// Team's Email ID.\nconst team = \"\";\n\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\nconst BROWSERS_LIST = [\"last 2 version\", \"> 1%\"];\n\n// Export.\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,iBAAiB;;AAEpC;AACA,MAAMC,UAAU,GAAG,IAAI;AACvB,MAAMC,eAAe,GAAG,KAAK;AAC7B,MAAMC,aAAa,GAAG,IAAI;;AAE1B;AACA;AACA,MAAMC,QAAQ,GAAG,yBAAyB;;AAE1C;AACA,MAAMC,gBAAgB,GAAG,eAAe;;AAExC;AACA,MAAMC,WAAW,GAAG,SAAS;AAC7B,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,SAAS,GAAG,EAAE;;AAEpB;;AAEA;AACA,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,mBAAmB,GAAG,cAAc;;AAE1C;AACA,MAAMC,YAAY,GAAG,QAAQ;;AAE7B;;AAEA;AACA,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,mBAAmB,GAAG,cAAc;;AAE1C;AACA,MAAMC,YAAY,GAAG,QAAQ;;AAE7B;;AAEA;AACA;AACA,MAAMC,MAAM,GAAG,uBAAuB;;AAEtC;AACA;AACA,MAAMC,MAAM,GAAG,eAAe;;AAE9B;AACA;AACA,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,aAAa,GAAG,yBAAyB;;AAE/C;AACA,MAAMC,aAAa,GAAG,yBAAyB;;AAE/C;AACA,MAAMC,QAAQ,GAAG,YAAY;;AAE7B;AACA;AACA,MAAMC,OAAO,GAAG,WAAW;;AAE3B;AACA,MAAMC,cAAc,GAAG,OAAO,CAAC,CAAC;AAChC,MAAMC,cAAc,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEnC;AACA,MAAMC,aAAa,GAAG,CACpB,qCAAqC,EACrC,SAAS,EACT,SAAS,EACT,sBAAsB,EACtB,qBAAqB,EACrB,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,mBAAmB,EACnB,WAAW,EACX,iBAAiB,EACjB,sBAAsB,EACtB,qBAAqB,EACrB,gBAAgB,EAChB,wBAAwB,EACxB,mBAAmB,EAClB,IAAGT,MAAO,EAAC,EACX,IAAGX,QAAS,EAAC,EACb,IAAGQ,WAAY,EAAC,EAChB,IAAGH,WAAY,EAAC,CAClB;;AAED;AACA;AACA,MAAMgB,UAAU,GAAG,OAAO;;AAE1B;AACA,MAAMC,eAAe,GAAG,WAAW;;AAEnC;AACA,MAAMC,sBAAsB,GAAG,aAAa;;AAE5C;AACA,MAAMC,WAAW,GAAG,OAAO;;AAE3B;AACA,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,cAAc,GAAG,EAAE;;AAEzB;AACA,MAAMC,IAAI,GAAG,EAAE;;AAEf;AACA;AACA,MAAMC,aAAa,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC;;AAEhD;AACAC,MAAM,CAACC,OAAO,GAAG;EACflC,UAAU;EACVC,UAAU;EACVC,eAAe;EACfC,aAAa;EACbC,QAAQ;EACRC,gBAAgB;EAChBC,WAAW;EACXC,eAAe;EACfC,SAAS;EACTC,WAAW;EACXC,mBAAmB;EACnBC,YAAY;EACZC,WAAW;EACXC,mBAAmB;EACnBC,YAAY;EACZC,MAAM;EACNC,MAAM;EACNC,WAAW;EACXC,aAAa;EACbC,aAAa;EACbC,QAAQ;EACRC,OAAO;EACPC,cAAc;EACdC,cAAc;EACdC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC,sBAAsB;EACtBC,WAAW;EACXC,SAAS;EACTC,cAAc;EACdC,IAAI;EACJC;AACF,CAAC"}},"mtime":1689350338414},"{\"assumptions\":{},\"sourceRoot\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit\",\"filename\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.9:development":{"value":{"code":"/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require(\"./wpgulp.config.js\");\n\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\nconst gulp = require(\"gulp\"); // Gulp of-course.\n\n// CSS related plugins.\nconst sass = require(\"gulp-sass\"); // Gulp plugin for Sass compilation.\nconst minifycss = require(\"gulp-uglifycss\"); // Minifies CSS files.\nconst autoprefixer = require(\"gulp-autoprefixer\"); // Autoprefixing magic.\nconst mmq = require(\"gulp-merge-media-queries\"); // Combine matching media queries into one.\nconst rtlcss = require(\"gulp-rtlcss\"); // Generates RTL stylesheet.\n\n// JS related plugins.\nconst concat = require(\"gulp-concat\"); // Concatenates JS files.\nconst uglify = require(\"gulp-uglify\"); // Minifies JS files.\nconst babel = require(\"gulp-babel\"); // Compiles ESNext to browser compatible JS.\n\n// Image related plugins.\nconst imagemin = require(\"gulp-imagemin\"); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n\n// Utility related plugins.\nconst rename = require(\"gulp-rename\"); // Renames files E.g. style.css -> style.min.css.\nconst lineec = require(\"gulp-line-ending-corrector\"); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\nconst filter = require(\"gulp-filter\"); // Enables you to work on a subset of the original files by filtering them using a glob.\nconst sourcemaps = require(\"gulp-sourcemaps\"); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\nconst notify = require(\"gulp-notify\"); // Sends message notification to you.\nconst browserSync = require(\"browser-sync\").create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\nconst wpPot = require(\"gulp-wp-pot\"); // For generating the .pot file.\nconst sort = require(\"gulp-sort\"); // Recommended to prevent unnecessary changes in pot-file.\nconst cache = require(\"gulp-cache\"); // Cache files in stream for later use.\nconst remember = require(\"gulp-remember\"); //  Adds all the files it has ever seen back into the stream.\nconst plumber = require(\"gulp-plumber\"); // Prevent pipe breaking caused by errors from gulp plugins.\nconst beep = require(\"beepbeep\");\nconst zip = require(\"gulp-zip\"); // Zip plugin or theme file.\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\nconst errorHandler = r => {\n  notify.onError(\"\\n\\n❌  ===> ERROR: <%= error.message %>\\n\")(r);\n  beep();\n\n  // this.emit('end');\n};\n\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\nconst browsersync = done => {\n  browserSync.init({\n    proxy: config.projectURL,\n    open: config.browserAutoOpen,\n    injectChanges: config.injectChanges,\n    watchEvents: [\"change\", \"add\", \"unlink\", \"addDir\", \"unlinkDir\"]\n  });\n  done();\n};\n\n// Helper function to allow browser reload with Gulp 4.\nconst reload = done => {\n  browserSync.reload();\n  done();\n};\n\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\ngulp.task(\"styles\", () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on(\"error\", sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(sourcemaps.write(\"./\")).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n  .pipe(rename({\n    suffix: \".min\"\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n  .pipe(notify({\n    message: \"\\n\\n✅  ===> STYLES — completed!\\n\",\n    onLast: true\n  }));\n});\n\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\ngulp.task(\"stylesRTL\", () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on(\"error\", sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(rename({\n    suffix: \"-rtl\"\n  })) // Append \"-rtl\" to the filename.\n  .pipe(rtlcss()) // Convert to RTL.\n  .pipe(sourcemaps.write(\"./\")) // Output sourcemap for style-rtl.css.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(rename({\n    suffix: \".min\"\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(notify({\n    message: \"\\n\\n✅  ===> STYLES RTL — completed!\\n\",\n    onLast: true\n  }));\n});\n\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\ngulp.task(\"vendorsJS\", () => {\n  return gulp.src(config.jsVendorSRC, {\n    since: gulp.lastRun(\"vendorsJS\")\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [[\"@babel/preset-env\",\n    // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n    }]]\n  })).pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsVendorFile + \".js\")).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(rename({\n    basename: config.jsVendorFile,\n    suffix: \".min\"\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(notify({\n    message: \"\\n\\n✅  ===> VENDOR JS — completed!\\n\",\n    onLast: true\n  }));\n});\n\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\ngulp.task(\"customJS\", () => {\n  return gulp.src(config.jsCustomSRC, {\n    since: gulp.lastRun(\"customJS\")\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [[\"@babel/preset-env\",\n    // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n    }]]\n  })).pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsCustomFile + \".js\")).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(rename({\n    basename: config.jsCustomFile,\n    suffix: \".min\"\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(notify({\n    message: \"\\n\\n✅  ===> CUSTOM JS — completed!\\n\",\n    onLast: true\n  }));\n});\n\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\ngulp.task(\"images\", () => {\n  return gulp.src(config.imgSRC).pipe(cache(imagemin([imagemin.gifsicle({\n    interlaced: true\n  }), imagemin.mozjpeg({\n    quality: 90,\n    progressive: true\n  }), imagemin.optipng({\n    optimizationLevel: 3\n  }),\n  // 0-7 low-high.\n  imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]))).pipe(gulp.dest(config.imgDST)).pipe(notify({\n    message: \"\\n\\n✅  ===> IMAGES — completed!\\n\",\n    onLast: true\n  }));\n});\n\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\ngulp.task(\"clearCache\", function (done) {\n  return cache.clearAll(done);\n});\n\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\ngulp.task(\"translate\", () => {\n  return gulp.src(config.watchPhp).pipe(sort()).pipe(wpPot({\n    domain: config.textDomain,\n    package: config.packageName,\n    bugReport: config.bugReport,\n    lastTranslator: config.lastTranslator,\n    team: config.team\n  })).pipe(gulp.dest(config.translationDestination + \"/\" + config.translationFile)).pipe(notify({\n    message: \"\\n\\n✅  ===> TRANSLATE — completed!\\n\",\n    onLast: true\n  }));\n});\n\n/**\n * Zips theme or plugin and places in the parent directory\n *\n * zipIncludeGlob: Files to be included in the zip file\n * zipIgnoreGlob: Files to be ignored from the zip file\n * zipDestination: Must be a folder outside of the zip folder.\n * zipName: theme.zip or plugin.zip\n */\ngulp.task(\"zip\", () => {\n  const src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n  return gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\n});\n\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\ngulp.task(\"default\", gulp.parallel(\"styles\", \"vendorsJS\", \"customJS\", \"images\", browsersync, () => {\n  gulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n  gulp.watch(config.watchStyles, gulp.parallel(\"styles\")); // Reload on SCSS file changes.\n  gulp.watch(config.watchJsVendor, gulp.series(\"vendorsJS\", reload)); // Reload on vendorsJS file changes.\n  gulp.watch(config.watchJsCustom, gulp.series(\"customJS\", reload)); // Reload on customJS file changes.\n  gulp.watch(config.imgSRC, gulp.series(\"images\", reload)); // Reload on customJS file changes.\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["config","require","gulp","sass","minifycss","autoprefixer","mmq","rtlcss","concat","uglify","babel","imagemin","rename","lineec","filter","sourcemaps","notify","browserSync","create","wpPot","sort","cache","remember","plumber","beep","zip","errorHandler","r","onError","browsersync","done","init","proxy","projectURL","open","browserAutoOpen","injectChanges","watchEvents","reload","task","src","styleSRC","allowEmpty","pipe","errLogToConsole","outputStyle","precision","on","logError","write","includeContent","loadMaps","BROWSERS_LIST","dest","styleDestination","log","stream","suffix","maxLineLen","message","onLast","jsVendorSRC","since","lastRun","presets","targets","browsers","jsVendorFile","jsVendorDestination","basename","jsCustomSRC","jsCustomFile","jsCustomDestination","imgSRC","gifsicle","interlaced","mozjpeg","quality","progressive","optipng","optimizationLevel","svgo","plugins","removeViewBox","cleanupIDs","imgDST","clearAll","watchPhp","domain","textDomain","package","packageName","bugReport","lastTranslator","team","translationDestination","translationFile","zipIncludeGlob","zipIgnoreGlob","zipName","zipDestination","parallel","watch","watchStyles","watchJsVendor","series","watchJsCustom"],"sourceRoot":"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit/","sources":["gulpfile.babel.js"],"sourcesContent":["/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require(\"./wpgulp.config.js\");\n\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\nconst gulp = require(\"gulp\"); // Gulp of-course.\n\n// CSS related plugins.\nconst sass = require(\"gulp-sass\"); // Gulp plugin for Sass compilation.\nconst minifycss = require(\"gulp-uglifycss\"); // Minifies CSS files.\nconst autoprefixer = require(\"gulp-autoprefixer\"); // Autoprefixing magic.\nconst mmq = require(\"gulp-merge-media-queries\"); // Combine matching media queries into one.\nconst rtlcss = require(\"gulp-rtlcss\"); // Generates RTL stylesheet.\n\n// JS related plugins.\nconst concat = require(\"gulp-concat\"); // Concatenates JS files.\nconst uglify = require(\"gulp-uglify\"); // Minifies JS files.\nconst babel = require(\"gulp-babel\"); // Compiles ESNext to browser compatible JS.\n\n// Image related plugins.\nconst imagemin = require(\"gulp-imagemin\"); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n\n// Utility related plugins.\nconst rename = require(\"gulp-rename\"); // Renames files E.g. style.css -> style.min.css.\nconst lineec = require(\"gulp-line-ending-corrector\"); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\nconst filter = require(\"gulp-filter\"); // Enables you to work on a subset of the original files by filtering them using a glob.\nconst sourcemaps = require(\"gulp-sourcemaps\"); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\nconst notify = require(\"gulp-notify\"); // Sends message notification to you.\nconst browserSync = require(\"browser-sync\").create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\nconst wpPot = require(\"gulp-wp-pot\"); // For generating the .pot file.\nconst sort = require(\"gulp-sort\"); // Recommended to prevent unnecessary changes in pot-file.\nconst cache = require(\"gulp-cache\"); // Cache files in stream for later use.\nconst remember = require(\"gulp-remember\"); //  Adds all the files it has ever seen back into the stream.\nconst plumber = require(\"gulp-plumber\"); // Prevent pipe breaking caused by errors from gulp plugins.\nconst beep = require(\"beepbeep\");\nconst zip = require(\"gulp-zip\"); // Zip plugin or theme file.\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\nconst errorHandler = (r) => {\n  notify.onError(\"\\n\\n❌  ===> ERROR: <%= error.message %>\\n\")(r);\n  beep();\n\n  // this.emit('end');\n};\n\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\nconst browsersync = (done) => {\n  browserSync.init({\n    proxy: config.projectURL,\n    open: config.browserAutoOpen,\n    injectChanges: config.injectChanges,\n    watchEvents: [\"change\", \"add\", \"unlink\", \"addDir\", \"unlinkDir\"],\n  });\n  done();\n};\n\n// Helper function to allow browser reload with Gulp 4.\nconst reload = (done) => {\n  browserSync.reload();\n  done();\n};\n\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\ngulp.task(\"styles\", () => {\n  return gulp\n    .src(config.styleSRC, { allowEmpty: true })\n    .pipe(plumber(errorHandler))\n    .pipe(sourcemaps.init())\n    .pipe(\n      sass({\n        errLogToConsole: config.errLogToConsole,\n        outputStyle: config.outputStyle,\n        precision: config.precision,\n      })\n    )\n    .on(\"error\", sass.logError)\n    .pipe(sourcemaps.write({ includeContent: false }))\n    .pipe(sourcemaps.init({ loadMaps: true }))\n    .pipe(autoprefixer(config.BROWSERS_LIST))\n    .pipe(sourcemaps.write(\"./\"))\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.styleDestination))\n    .pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n    .pipe(mmq({ log: true })) // Merge Media Queries only for .min.css version.\n    .pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n    .pipe(rename({ suffix: \".min\" }))\n    .pipe(minifycss({ maxLineLen: 10 }))\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.styleDestination))\n    .pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n    .pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n    .pipe(\n      notify({\n        message: \"\\n\\n✅  ===> STYLES — completed!\\n\",\n        onLast: true,\n      })\n    );\n});\n\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\ngulp.task(\"stylesRTL\", () => {\n  return gulp\n    .src(config.styleSRC, { allowEmpty: true })\n    .pipe(plumber(errorHandler))\n    .pipe(sourcemaps.init())\n    .pipe(\n      sass({\n        errLogToConsole: config.errLogToConsole,\n        outputStyle: config.outputStyle,\n        precision: config.precision,\n      })\n    )\n    .on(\"error\", sass.logError)\n    .pipe(sourcemaps.write({ includeContent: false }))\n    .pipe(sourcemaps.init({ loadMaps: true }))\n    .pipe(autoprefixer(config.BROWSERS_LIST))\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(rename({ suffix: \"-rtl\" })) // Append \"-rtl\" to the filename.\n    .pipe(rtlcss()) // Convert to RTL.\n    .pipe(sourcemaps.write(\"./\")) // Output sourcemap for style-rtl.css.\n    .pipe(gulp.dest(config.styleDestination))\n    .pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n    .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n    .pipe(mmq({ log: true })) // Merge Media Queries only for .min.css version.\n    .pipe(rename({ suffix: \".min\" }))\n    .pipe(minifycss({ maxLineLen: 10 }))\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.styleDestination))\n    .pipe(filter(\"**/*.css\")) // Filtering stream to only css files.\n    .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n    .pipe(\n      notify({\n        message: \"\\n\\n✅  ===> STYLES RTL — completed!\\n\",\n        onLast: true,\n      })\n    );\n});\n\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\ngulp.task(\"vendorsJS\", () => {\n  return gulp\n    .src(config.jsVendorSRC, { since: gulp.lastRun(\"vendorsJS\") }) // Only run on changed files.\n    .pipe(plumber(errorHandler))\n    .pipe(\n      babel({\n        presets: [\n          [\n            \"@babel/preset-env\", // Preset to compile your modern JS to ES5.\n            {\n              targets: { browsers: config.BROWSERS_LIST }, // Target browser list to support.\n            },\n          ],\n        ],\n      })\n    )\n    .pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n    .pipe(concat(config.jsVendorFile + \".js\"))\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.jsVendorDestination))\n    .pipe(\n      rename({\n        basename: config.jsVendorFile,\n        suffix: \".min\",\n      })\n    )\n    .pipe(uglify())\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.jsVendorDestination))\n    .pipe(\n      notify({\n        message: \"\\n\\n✅  ===> VENDOR JS — completed!\\n\",\n        onLast: true,\n      })\n    );\n});\n\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\ngulp.task(\"customJS\", () => {\n  return gulp\n    .src(config.jsCustomSRC, { since: gulp.lastRun(\"customJS\") }) // Only run on changed files.\n    .pipe(plumber(errorHandler))\n    .pipe(\n      babel({\n        presets: [\n          [\n            \"@babel/preset-env\", // Preset to compile your modern JS to ES5.\n            {\n              targets: { browsers: config.BROWSERS_LIST }, // Target browser list to support.\n            },\n          ],\n        ],\n      })\n    )\n    .pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n    .pipe(concat(config.jsCustomFile + \".js\"))\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.jsCustomDestination))\n    .pipe(\n      rename({\n        basename: config.jsCustomFile,\n        suffix: \".min\",\n      })\n    )\n    .pipe(uglify())\n    .pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n    .pipe(gulp.dest(config.jsCustomDestination))\n    .pipe(\n      notify({\n        message: \"\\n\\n✅  ===> CUSTOM JS — completed!\\n\",\n        onLast: true,\n      })\n    );\n});\n\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\ngulp.task(\"images\", () => {\n  return gulp\n    .src(config.imgSRC)\n    .pipe(\n      cache(\n        imagemin([\n          imagemin.gifsicle({ interlaced: true }),\n          imagemin.mozjpeg({ quality: 90, progressive: true }),\n          imagemin.optipng({ optimizationLevel: 3 }), // 0-7 low-high.\n          imagemin.svgo({\n            plugins: [{ removeViewBox: true }, { cleanupIDs: false }],\n          }),\n        ])\n      )\n    )\n    .pipe(gulp.dest(config.imgDST))\n    .pipe(\n      notify({\n        message: \"\\n\\n✅  ===> IMAGES — completed!\\n\",\n        onLast: true,\n      })\n    );\n});\n\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\ngulp.task(\"clearCache\", function (done) {\n  return cache.clearAll(done);\n});\n\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\ngulp.task(\"translate\", () => {\n  return gulp\n    .src(config.watchPhp)\n    .pipe(sort())\n    .pipe(\n      wpPot({\n        domain: config.textDomain,\n        package: config.packageName,\n        bugReport: config.bugReport,\n        lastTranslator: config.lastTranslator,\n        team: config.team,\n      })\n    )\n    .pipe(\n      gulp.dest(config.translationDestination + \"/\" + config.translationFile)\n    )\n    .pipe(\n      notify({\n        message: \"\\n\\n✅  ===> TRANSLATE — completed!\\n\",\n        onLast: true,\n      })\n    );\n});\n\n/**\n * Zips theme or plugin and places in the parent directory\n *\n * zipIncludeGlob: Files to be included in the zip file\n * zipIgnoreGlob: Files to be ignored from the zip file\n * zipDestination: Must be a folder outside of the zip folder.\n * zipName: theme.zip or plugin.zip\n */\ngulp.task(\"zip\", () => {\n  const src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n  return gulp\n    .src(src)\n    .pipe(zip(config.zipName))\n    .pipe(gulp.dest(config.zipDestination));\n});\n\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\ngulp.task(\n  \"default\",\n  gulp.parallel(\n    \"styles\",\n    \"vendorsJS\",\n    \"customJS\",\n    \"images\",\n    browsersync,\n    () => {\n      gulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n      gulp.watch(config.watchStyles, gulp.parallel(\"styles\")); // Reload on SCSS file changes.\n      gulp.watch(config.watchJsVendor, gulp.series(\"vendorsJS\", reload)); // Reload on vendorsJS file changes.\n      gulp.watch(config.watchJsCustom, gulp.series(\"customJS\", reload)); // Reload on customJS file changes.\n      gulp.watch(config.imgSRC, gulp.series(\"images\", reload)); // Reload on customJS file changes.\n    }\n  )\n);\n"],"mappings":"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"}},"mtime":1690291501817},"{\"assumptions\":{},\"sourceRoot\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit\",\"filename\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit/wpgulp.config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.9:development":{"value":{"code":"const projectName = \"project-name\";\nconst projectURL = \"localhost:10014\";\n\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\n\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\nconst productURL = \"./\";\nconst browserAutoOpen = false;\nconst injectChanges = true;\n\n// >>>>> Style options.\n// Path to main .scss file.\nconst styleSRC = \"./assets/scss/main.scss\";\n\n// Path to place the compiled CSS file. Default set to root folder.\nconst styleDestination = \"./assets/css/\";\n\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\nconst outputStyle = \"compact\";\nconst errLogToConsole = true;\nconst precision = 10;\n\n// JS Vendor options.\n\n// Path to JS vendor folder.\nconst jsVendorSRC = \"./assets/js/vendor/*.js\";\n\n// Path to place the compiled JS vendors file.\nconst jsVendorDestination = \"./assets/js/\";\n\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\nconst jsVendorFile = \"vendor\";\n\n// JS Custom options.\n\n// Path to JS custom scripts folder.\nconst jsCustomSRC = \"./assets/js/custom/*.js\";\n\n// Path to place the compiled JS custom scripts file.\nconst jsCustomDestination = \"./assets/js/\";\n\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\nconst jsCustomFile = \"custom\";\n\n// Images options.\n\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\nconst imgSRC = \"./assets/img/raw/**/*\";\n\n// Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\nconst imgDST = \"./assets/img/\";\n\n// >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\nconst watchStyles = \"./assets/scss/**/*.scss\";\n\n// Path to all vendor JS files.\nconst watchJsVendor = \"./assets/js/vendor/*.js\";\n\n// Path to all custom JS files.\nconst watchJsCustom = \"./assets/js/custom/*.js\";\n\n// Path to all PHP files.\nconst watchPhp = \"./**/*.php\";\n\n// >>>>> Zip file config.\n// Must have.zip at the end.\nconst zipName = `${projectName}.zip`;\n\n// Must be a folder outside of the zip folder.\nconst zipDestination = \"./../\"; // Default: Parent folder.\nconst zipIncludeGlob = [\"./**/*\"]; // Default: Include all files/folders in current directory.\n\n// Default ignored files and folders for the zip file.\nconst zipIgnoreGlob = [\"!./{node_modules,node_modules/**/*}\", \"!./.git\", \"!./.svn\", \"!./gulpfile.babel.js\", \"!./wpgulp.config.js\", \"!./.eslintrc.js\", \"!./.eslintignore\", \"!./.editorconfig\", \"!./phpcs.xml.dist\", \"!./vscode\", \"!./package.json\", \"!./package-lock.json\", \"!./assets/scss/**/*\", \"!./assets/scss\", \"!./assets/img/raw/**/*\", \"!./assets/img/raw\", `!${imgSRC}`, `!${styleSRC}`, `!${jsCustomSRC}`, `!${jsVendorSRC}`];\n\n// >>>>> Translation options.\n// Your text domain here.\nconst textDomain = projectName;\n\n// Name of the translation file.\nconst translationFile = `${projectName}.pot`;\n\n// Where to save the translation files.\nconst translationDestination = \"./languages\";\n\n// Package name.\nconst packageName = projectName;\n\n// Where can users report bugs.\nconst bugReport = \"\";\n\n// Last translator Email ID.\nconst lastTranslator = \"\";\n\n// Team's Email ID.\nconst team = \"\";\n\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\nconst BROWSERS_LIST = [\"last 2 version\", \"> 1%\"];\n\n// Export.\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["projectName","projectURL","productURL","browserAutoOpen","injectChanges","styleSRC","styleDestination","outputStyle","errLogToConsole","precision","jsVendorSRC","jsVendorDestination","jsVendorFile","jsCustomSRC","jsCustomDestination","jsCustomFile","imgSRC","imgDST","watchStyles","watchJsVendor","watchJsCustom","watchPhp","zipName","zipDestination","zipIncludeGlob","zipIgnoreGlob","textDomain","translationFile","translationDestination","packageName","bugReport","lastTranslator","team","BROWSERS_LIST","module","exports"],"sourceRoot":"/home/roman/Local Sites/terraria-store/app/public/wp-content/themes/my-wpgulp-starter-kit/","sources":["wpgulp.config.js"],"sourcesContent":["const projectName = \"project-name\";\nconst projectURL = \"localhost:10014\";\n\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\n\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\nconst productURL = \"./\";\nconst browserAutoOpen = false;\nconst injectChanges = true;\n\n// >>>>> Style options.\n// Path to main .scss file.\nconst styleSRC = \"./assets/scss/main.scss\";\n\n// Path to place the compiled CSS file. Default set to root folder.\nconst styleDestination = \"./assets/css/\";\n\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\nconst outputStyle = \"compact\";\nconst errLogToConsole = true;\nconst precision = 10;\n\n// JS Vendor options.\n\n// Path to JS vendor folder.\nconst jsVendorSRC = \"./assets/js/vendor/*.js\";\n\n// Path to place the compiled JS vendors file.\nconst jsVendorDestination = \"./assets/js/\";\n\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\nconst jsVendorFile = \"vendor\";\n\n// JS Custom options.\n\n// Path to JS custom scripts folder.\nconst jsCustomSRC = \"./assets/js/custom/*.js\";\n\n// Path to place the compiled JS custom scripts file.\nconst jsCustomDestination = \"./assets/js/\";\n\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\nconst jsCustomFile = \"custom\";\n\n// Images options.\n\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\nconst imgSRC = \"./assets/img/raw/**/*\";\n\n// Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\nconst imgDST = \"./assets/img/\";\n\n// >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\nconst watchStyles = \"./assets/scss/**/*.scss\";\n\n// Path to all vendor JS files.\nconst watchJsVendor = \"./assets/js/vendor/*.js\";\n\n// Path to all custom JS files.\nconst watchJsCustom = \"./assets/js/custom/*.js\";\n\n// Path to all PHP files.\nconst watchPhp = \"./**/*.php\";\n\n// >>>>> Zip file config.\n// Must have.zip at the end.\nconst zipName = `${projectName}.zip`;\n\n// Must be a folder outside of the zip folder.\nconst zipDestination = \"./../\"; // Default: Parent folder.\nconst zipIncludeGlob = [\"./**/*\"]; // Default: Include all files/folders in current directory.\n\n// Default ignored files and folders for the zip file.\nconst zipIgnoreGlob = [\n  \"!./{node_modules,node_modules/**/*}\",\n  \"!./.git\",\n  \"!./.svn\",\n  \"!./gulpfile.babel.js\",\n  \"!./wpgulp.config.js\",\n  \"!./.eslintrc.js\",\n  \"!./.eslintignore\",\n  \"!./.editorconfig\",\n  \"!./phpcs.xml.dist\",\n  \"!./vscode\",\n  \"!./package.json\",\n  \"!./package-lock.json\",\n  \"!./assets/scss/**/*\",\n  \"!./assets/scss\",\n  \"!./assets/img/raw/**/*\",\n  \"!./assets/img/raw\",\n  `!${imgSRC}`,\n  `!${styleSRC}`,\n  `!${jsCustomSRC}`,\n  `!${jsVendorSRC}`,\n];\n\n// >>>>> Translation options.\n// Your text domain here.\nconst textDomain = projectName;\n\n// Name of the translation file.\nconst translationFile = `${projectName}.pot`;\n\n// Where to save the translation files.\nconst translationDestination = \"./languages\";\n\n// Package name.\nconst packageName = projectName;\n\n// Where can users report bugs.\nconst bugReport = \"\";\n\n// Last translator Email ID.\nconst lastTranslator = \"\";\n\n// Team's Email ID.\nconst team = \"\";\n\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\nconst BROWSERS_LIST = [\"last 2 version\", \"> 1%\"];\n\n// Export.\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST,\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,cAAc;AAClC,MAAMC,UAAU,GAAG,iBAAiB;;AAEpC;AACA;AACA;;AAEA;AACA,MAAMC,UAAU,GAAG,IAAI;AACvB,MAAMC,eAAe,GAAG,KAAK;AAC7B,MAAMC,aAAa,GAAG,IAAI;;AAE1B;AACA;AACA,MAAMC,QAAQ,GAAG,yBAAyB;;AAE1C;AACA,MAAMC,gBAAgB,GAAG,eAAe;;AAExC;AACA,MAAMC,WAAW,GAAG,SAAS;AAC7B,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,SAAS,GAAG,EAAE;;AAEpB;;AAEA;AACA,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,mBAAmB,GAAG,cAAc;;AAE1C;AACA,MAAMC,YAAY,GAAG,QAAQ;;AAE7B;;AAEA;AACA,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,mBAAmB,GAAG,cAAc;;AAE1C;AACA,MAAMC,YAAY,GAAG,QAAQ;;AAE7B;;AAEA;AACA;AACA,MAAMC,MAAM,GAAG,uBAAuB;;AAEtC;AACA;AACA,MAAMC,MAAM,GAAG,eAAe;;AAE9B;AACA;AACA,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,aAAa,GAAG,yBAAyB;;AAE/C;AACA,MAAMC,aAAa,GAAG,yBAAyB;;AAE/C;AACA,MAAMC,QAAQ,GAAG,YAAY;;AAE7B;AACA;AACA,MAAMC,OAAO,GAAI,GAAEtB,WAAY,MAAK;;AAEpC;AACA,MAAMuB,cAAc,GAAG,OAAO,CAAC,CAAC;AAChC,MAAMC,cAAc,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEnC;AACA,MAAMC,aAAa,GAAG,CACpB,qCAAqC,EACrC,SAAS,EACT,SAAS,EACT,sBAAsB,EACtB,qBAAqB,EACrB,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,mBAAmB,EACnB,WAAW,EACX,iBAAiB,EACjB,sBAAsB,EACtB,qBAAqB,EACrB,gBAAgB,EAChB,wBAAwB,EACxB,mBAAmB,EAClB,IAAGT,MAAO,EAAC,EACX,IAAGX,QAAS,EAAC,EACb,IAAGQ,WAAY,EAAC,EAChB,IAAGH,WAAY,EAAC,CAClB;;AAED;AACA;AACA,MAAMgB,UAAU,GAAG1B,WAAW;;AAE9B;AACA,MAAM2B,eAAe,GAAI,GAAE3B,WAAY,MAAK;;AAE5C;AACA,MAAM4B,sBAAsB,GAAG,aAAa;;AAE5C;AACA,MAAMC,WAAW,GAAG7B,WAAW;;AAE/B;AACA,MAAM8B,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,cAAc,GAAG,EAAE;;AAEzB;AACA,MAAMC,IAAI,GAAG,EAAE;;AAEf;AACA;AACA,MAAMC,aAAa,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC;;AAEhD;AACAC,MAAM,CAACC,OAAO,GAAG;EACflC,UAAU;EACVC,UAAU;EACVC,eAAe;EACfC,aAAa;EACbC,QAAQ;EACRC,gBAAgB;EAChBC,WAAW;EACXC,eAAe;EACfC,SAAS;EACTC,WAAW;EACXC,mBAAmB;EACnBC,YAAY;EACZC,WAAW;EACXC,mBAAmB;EACnBC,YAAY;EACZC,MAAM;EACNC,MAAM;EACNC,WAAW;EACXC,aAAa;EACbC,aAAa;EACbC,QAAQ;EACRC,OAAO;EACPC,cAAc;EACdC,cAAc;EACdC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC,sBAAsB;EACtBC,WAAW;EACXC,SAAS;EACTC,cAAc;EACdC,IAAI;EACJC;AACF,CAAC"}},"mtime":1690296223890}}